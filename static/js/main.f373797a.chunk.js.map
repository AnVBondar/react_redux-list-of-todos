{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","value","initialFilterState","query","status","filterReducer","filter","_objectSpread","todosReducer","todos","_toConsumableArray","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","selectedTodo","dispatch","filteredTodos","updatedTodos","title","toLocaleLowerCase","includes","completed","getFilteredTodos","_jsx","_Fragment","children","_jsxs","className","map","id","onClick","setTodo","TodoFilter","_useState","useState","_useState2","_slicedToArray","enteredQuery","setEnteredQuery","timerId","useRef","onSubmit","event","preventDefault","onChange","e","currentTarget","FilterActions","placeholder","val","window","clearTimeout","current","setTimeout","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","then","fetch","res","json","TodoModal","isLoading","setIsLoading","_useState3","_useState4","user","setUser","useEffect","userId","concat","finally","currentTodoActions","href","email","name","App","response","todosActions","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"qOAeaA,EALG,SAACC,GAAU,MAAqB,CAC9CC,KAAM,kBACNC,QAASF,EACV,EAEYD,EAPM,WAAH,MAA4B,CAAEE,KAAM,qBAAsB,EA4B3DE,EAhBY,WAGd,IAFXC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACfG,EAAcH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEd,OAAQC,EAAOP,MACb,IAAK,kBACH,OAAOO,EAAON,QAEhB,IAAK,qBACH,OAAO,KAET,QACE,OAAOE,EAEb,E,OClBaL,EARI,SAACU,GAAa,MAC7B,CAAER,KAAM,YAAaC,QAASO,EAAO,EAO1BV,EALM,WAAH,MAAsB,CAAEE,KAAM,cAAe,EAKhDF,EAJK,SAACU,GAAa,MAC9B,CAAER,KAAM,aAAcC,QAASO,EAAO,EAUlCC,EAA6B,CACjCC,MAAO,GACPC,OAAQ,OAmBKC,EAhBO,WAGR,IAFZC,EAAcT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGK,EACjBF,EAAcH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEd,OAAQC,EAAOP,MACb,IAAK,YACH,OAAAc,wBAAA,GAAYD,GAAM,IAAEH,MAAOH,EAAON,UACpC,IAAK,cACH,OAAAa,wBAAA,GAAYD,GAAM,IAAEH,MAAO,KAC7B,IAAK,aACH,OAAAI,wBAAA,GAAYD,GAAM,IAAEF,OAAQJ,EAAON,UACrC,QACE,OAAOY,EAEb,E,OC/Baf,EAPD,SAACU,GAAa,MACxB,CACER,KAAM,YACNC,QAASO,EACV,EAeYO,EAVM,WAAoD,IAAnDC,EAAaZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAiBH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzD,MACO,cADCC,EAAOP,KAEXiB,YAAWV,EAAON,SAGXe,CAEb,ECbME,EAAcC,0BAAgB,CAClCC,YAAalB,EACbW,OAAQD,EACRI,MAAOD,IAIIM,EAAQC,sBACnBJ,EACAK,8BACEC,0BAAgBC,O,cCfPC,G,YAAoCC,KACpCC,EAAkDC,I,OCGlDC,EAAqB,WAChC,IAAMd,EAAQY,GAAe,SAAAzB,GAAK,OAAIA,EAAMa,KAAK,IAC3CH,EAASe,GAAe,SAAAzB,GAAK,OAAIA,EAAMU,MAAM,IAC7CkB,EAAeH,GAAe,SAAAzB,GAAK,OAAIA,EAAMiB,WAAW,IACxDY,EAAWN,IAoBXO,EAfmB,WACvB,IAAMC,EAAelB,EAAMH,QAAO,SAAAd,GAAI,OAAIA,EAAKoC,MAC5CC,oBACAC,SAASxB,EAAOH,MAAM,IAEzB,OAAQG,EAAOF,QACb,IAAK,SACH,OAAOuB,EAAarB,QAAO,SAAAd,GAAI,OAAKA,EAAKuC,SAAS,IACpD,IAAK,YACH,OAAOJ,EAAarB,QAAO,SAAAd,GAAI,OAAIA,EAAKuC,SAAS,IACnD,QACE,OAAOJ,EAEb,CAEsBK,GAEtB,OACEC,cAAAC,WAAA,CAAAC,SACGT,EAAc5B,OAAS,EACtBsC,eAAA,SAAOC,UAAU,+BAA8BF,SAAA,CAC7CF,cAAA,SAAAE,SACEC,eAAA,MAAAD,SAAA,CACEF,cAAA,MAAAE,SAAI,MAEJF,cAAA,MAAAE,SACEF,cAAA,QAAMI,UAAU,OAAMF,SACpBF,cAAA,KAAGI,UAAU,qBAIjBJ,cAAA,MAAAE,SAAI,UACJF,cAAA,MAAAE,SAAI,WAIRF,cAAA,SAAAE,SACGT,EAAcY,KAAI,SAAA9C,GAAI,OACrB4C,eAAA,MACE,UAAQ,OAERC,WAAuB,OAAZb,QAAY,IAAZA,OAAY,EAAZA,EAAce,MAAO/C,EAAK+C,GAAK,4BAA8B,GAAGJ,SAAA,CAE3EF,cAAA,MAAII,UAAU,eAAcF,SAAE3C,EAAK+C,KACnCN,cAAA,MAAII,UAAU,eAAcF,SACzB3C,EAAKuC,WACJE,cAAA,QAAMI,UAAU,OAAO,UAAQ,gBAAeF,SAACF,cAAA,KAAGI,UAAU,qBAGhEJ,cAAA,MAAII,UAAU,2BAA0BF,SACtCF,cAAA,KAAGI,UAAW7C,EAAKuC,UAAY,mBAAqB,kBAAkBI,SAAE3C,EAAKoC,UAG/EK,cAAA,MAAII,UAAU,8BAA6BF,SACzCF,cAAA,UACE,UAAQ,eACRI,UAAU,SACV5C,KAAK,SACL+C,QAAS,kBA9DX,SAAChD,GACfiC,EAASlC,EAAgBC,GAC3B,CA4DiCiD,CAAQjD,EAAK,EAAC2C,SAE7BF,cAAA,QAAMI,UAAU,OAAMF,SACpBF,cAAA,KAAGI,WAAuB,OAAZb,QAAY,IAAZA,OAAY,EAAZA,EAAce,MAAO/C,EAAK+C,GAAK,mBAAqB,uBArBnE/C,EAAK+C,GAyBP,SAKXN,cAAA,KAAGI,UAAU,0BAAyBF,SAAC,yDAM/C,ECtFaO,EAAuB,WAClC,IAAAC,EAAwCC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAArDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BpB,EAAWN,IACThB,EAAUkB,GAAe,SAAAzB,GAAK,OAAIA,EAAMU,MAAM,IAA9CH,MAOF8C,EAAUC,iBAAO,GAavB,OACEd,eAAA,QACEC,UAAU,mBACVc,SAAU,SAAAC,GAAK,OAAIA,EAAMC,gBAAgB,EAAClB,SAAA,CAE1CF,cAAA,KAAGI,UAAU,UAASF,SACpBF,cAAA,QAAMI,UAAU,SAAQF,SACtBC,eAAA,UACE,UAAQ,eACRkB,SAAU,SAAAC,GAAC,OAvBFtD,EAuBgBsD,EAAEC,cAAcvD,MAvBdwB,EAASgC,EAAwBxD,IAApD,IAACA,CAuBgD,EAACkC,SAAA,CAE1DF,cAAA,UAAQhC,MAAM,MAAKkC,SAAC,QACpBF,cAAA,UAAQhC,MAAM,SAAQkC,SAAC,WACvBF,cAAA,UAAQhC,MAAM,YAAWkC,SAAC,qBAKhCC,eAAA,KAAGC,UAAU,qDAAoDF,SAAA,CAC/DF,cAAA,SACE,UAAQ,cACRxC,KAAK,OACL4C,UAAU,QACVqB,YAAY,YACZzD,MAAO8C,EACPO,SArCY,SAACC,GACnB,IAAMI,EAAMJ,EAAEC,cAAcvD,MAE5B+C,EAAgBW,GAEhBC,OAAOC,aAAaZ,EAAQa,SAE5Bb,EAAQa,QAAUF,OAAOG,YAAW,WAClCtC,EAASgC,EAAuBE,EAAI9B,qBACtC,GAAG,IACL,IA6BMI,cAAA,QAAMI,UAAU,eAAcF,SAC5BF,cAAA,KAAGI,UAAU,8BAGdlC,GACC8B,cAAA,QAAMI,UAAU,gBAAgB2B,MAAO,CAAEC,cAAe,OAAQ9B,SAE9DF,cAAA,UACE,UAAQ,oBACRxC,KAAK,SACL4C,UAAU,SACVG,QAAS,kBAxDnBQ,EAAgB,SAChBvB,EAASgC,IAuD4B,WAOzC,ECvEaS,G,MAAmB,WAAH,OAC3BjC,cAAA,OAAKI,UAAU,SAAS,UAAQ,SAAQF,SACtCF,cAAA,OAAKI,UAAU,qBACX,GCMR,SAAS8B,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBT,WAAWS,EAASH,EACtB,KAQGI,MAAK,kBAAMC,MAAMJ,EAAQ,IACzBG,MAAK,SAAAE,GAAG,OAAIA,EAAIC,MAAM,GAC3B,CAEO,ICdMC,EAAsB,WACjC,IAAAlC,EAAkCC,oBAAkB,GAAKC,EAAAC,YAAAH,EAAA,GAAlDmC,EAASjC,EAAA,GAAEkC,EAAYlC,EAAA,GAC9BmC,EAAwBpC,mBAAsB,MAAKqC,EAAAnC,YAAAkC,EAAA,GAA5CE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdxD,EAAWN,IACX3B,EAAO6B,GAAe,SAAAzB,GAAK,OAAIA,EAAMiB,WAAW,IActD,OARAuE,qBAAU,WDMW,IAACC,ECLhB7F,IDKgB6F,ECJV7F,EAAK6F,ODIwBlB,EAAG,UAAAmB,OAAiBD,KCHtDZ,KAAKU,GACLI,SAAQ,kBAAMR,GAAa,EAAM,GAExC,GAAG,CAACvF,IAGF4C,eAAA,OAAKC,UAAU,kBAAkB,UAAQ,QAAOF,SAAA,CAC9CF,cAAA,OAAKI,UAAU,qBACdyC,EACC7C,cAACiC,EAAM,IACLgB,GACF9C,eAAA,OAAKC,UAAU,aAAYF,SAAA,CACzBC,eAAA,UAAQC,UAAU,kBAAiBF,SAAA,CACjCF,cAAA,OACEI,UAAU,0CACV,UAAQ,eAAcF,SAAA,SAAAmD,OAER,OAAJ9F,QAAI,IAAJA,OAAI,EAAJA,EAAM+C,MAGlBN,cAAA,UACExC,KAAK,SACL4C,UAAU,SACV,UAAQ,cACRG,QAAS,WA9BnBf,EAAS+D,IA8B4B,OAI/BpD,eAAA,OAAKC,UAAU,kBAAiBF,SAAA,CAC9BF,cAAA,KAAGI,UAAU,QAAQ,UAAQ,cAAaF,SAAM,OAAJ3C,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,QAElDQ,eAAA,KAAGC,UAAU,QAAQ,UAAQ,aAAYF,SAAA,CAClC,OAAJ3C,QAAI,IAAJA,KAAMuC,UACLE,cAAA,UAAQI,UAAU,mBAAkBF,SAAC,SAErCF,cAAA,UAAQI,UAAU,kBAAiBF,SAAC,YAErC,OACDF,cAAA,KAAGwD,KAAI,UAAAH,OAAYJ,EAAKQ,OAAQvD,SAAE+C,EAAKS,kBAOrD,ECpDaC,EAAgB,WAC3B,IAAAjD,EAAkCC,oBAAkB,GAAKC,EAAAC,YAAAH,EAAA,GAAlDmC,EAASjC,EAAA,GAAEkC,EAAYlC,EAAA,GACxBpB,EAAWN,IACXK,EAAeH,GAAe,SAAAzB,GAAK,OAAIA,EAAMiB,WAAW,IAQ9D,OANAuE,qBAAU,WFGkBjB,EAAY,UEDnCM,MAAK,SAAAoB,GAAQ,OAAIpE,EAASqE,EAAiBD,GAAU,IACrDN,SAAQ,kBAAMR,GAAa,EAAM,GACtC,IAGE3C,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAAA,OAAKI,UAAU,UAASF,SACtBF,cAAA,OAAKI,UAAU,YAAWF,SACxBC,eAAA,OAAKC,UAAU,MAAKF,SAAA,CAClBF,cAAA,MAAII,UAAU,QAAOF,SAAC,WAEtBF,cAAA,OAAKI,UAAU,QAAOF,SACpBF,cAACS,EAAU,MAGbT,cAAA,OAAKI,UAAU,QAAOF,SACnB2C,EACC7C,cAACiC,EAAM,IAEPjC,cAACV,EAAQ,aAOlBC,GACCS,cAAC4C,EAAS,MAIlB,EC1CMkB,EAAO,WAAH,OACR9D,cAAC+D,IAAQ,CAAClF,MAAOA,EAAMqB,SACrBF,cAACgE,IAAM,CAAA9D,SACLF,cAAC2D,EAAG,OAEG,EAGbM,IAASC,OAAOlE,cAAC8D,EAAI,IAAKK,SAASC,eAAe,Q","file":"static/js/main.f373797a.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQuery = { type: 'query/SET', payload: string };\ntype ClearQuery = { type: 'query/CLEAR' };\ntype SetStatus = { type: 'status/SET', payload: Status };\n\ntype Action = SetQuery | ClearQuery | SetStatus;\n\nconst setQuery = (value: string): SetQuery => (\n  { type: 'query/SET', payload: value }\n);\nconst clearQuery = (): ClearQuery => ({ type: 'query/CLEAR' });\nconst setStatus = (value: Status): SetStatus => (\n  { type: 'status/SET', payload: value }\n);\n\nexport const actions = { setQuery, clearQuery, setStatus };\n\ntype Filter = {\n  query: string;\n  status: Status;\n};\n\nconst initialFilterState: Filter = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  filter: Filter = initialFilterState,\n  action: Action,\n): Filter => {\n  switch (action.type) {\n    case 'query/SET':\n      return { ...filter, query: action.payload };\n    case 'query/CLEAR':\n      return { ...filter, query: '' };\n    case 'status/SET':\n      return { ...filter, status: action.payload };\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetAction = { type: 'todos/SET', payload: Todo[] };\n\nconst set = (value: Todo[]): SetAction => (\n  {\n    type: 'todos/SET',\n    payload: value,\n  }\n);\n\nexport const actions = { set };\n\nconst todosReducer = (todos: Todo[] = [], action: SetAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return [...action.payload];\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable max-len */\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { actions } from '../../features/currentTodo';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const filter = useAppSelector(state => state.filter);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n  const setTodo = (todo: Todo) => {\n    dispatch(actions.setTodo(todo));\n  };\n\n  const getFilteredTodos = () => {\n    const updatedTodos = todos.filter(todo => todo.title\n      .toLocaleLowerCase()\n      .includes(filter.query));\n\n    switch (filter.status) {\n      case 'active':\n        return updatedTodos.filter(todo => !todo.completed);\n      case 'completed':\n        return updatedTodos.filter(todo => todo.completed);\n      default:\n        return updatedTodos;\n    }\n  };\n\n  const filteredTodos = getFilteredTodos();\n\n  return (\n    <>\n      {filteredTodos.length > 0 ? (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filteredTodos.map(todo => (\n              <tr\n                data-cy=\"todo\"\n                key={todo.id}\n                className={selectedTodo?.id === todo.id ? 'has-background-info-light' : ''}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={todo.completed ? 'has-text-success' : 'has-text-danger'}>{todo.title}</p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => setTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className={selectedTodo?.id === todo.id ? 'far fa-eye-slash' : 'far fa-eye'} />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useRef, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as FilterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const [enteredQuery, setEnteredQuery] = useState<string>('');\n  const dispatch = useAppDispatch();\n  const { query } = useAppSelector(state => state.filter);\n  const clearQuery = () => {\n    setEnteredQuery('');\n    dispatch(FilterActions.clearQuery());\n  };\n\n  const setStatus = (value: Status) => dispatch(FilterActions.setStatus(value));\n  const timerId = useRef(0);\n  const handleQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.currentTarget.value;\n\n    setEnteredQuery(val);\n\n    window.clearTimeout(timerId.current);\n\n    timerId.current = window.setTimeout(() => {\n      dispatch(FilterActions.setQuery(val.toLocaleLowerCase()));\n    }, 500);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={e => setStatus(e.currentTarget.value as Status)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={enteredQuery}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => clearQuery()}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n  const todo = useAppSelector(state => state.currentTodo);\n\n  const removeTodo = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(setUser)\n        .finally(() => setIsLoading(false));\n    }\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading ? (\n        <Loader />\n      ) : user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => removeTodo()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{todo?.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const dispatch = useAppDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    getTodos()\n      .then(response => dispatch(todosActions.set(response)))\n      .finally(() => setIsLoading(false));\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}